/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "zmk-helpers/helper.h"
#include "includes/cornix54.h"

// tap windows for ctl alt and gui

#define HM_TAPPING_TERM 250
#define HM_TAPPING_REPEAT 210

// quick tapping for shift

#define HM_TAPPING_TERM_FAST 200
#define HM_PRIOR_IDLE 70
#define BASE 0
#define WIN 1
#define LOWER 2
#define RAISE 3
#define ADJUST 4
#define NAVI   5
#define NUM    6
#define DEBUG  7

// https://github.com/urob/zmk-config/tree/main#timeless-homerow-mods

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH1 LH0 RH0 RH1
#define KEYS_T LH1 LH0 RH0 RH1
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    // Activate ADJUST layer by pressing raise and lower

    behaviors {
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "tap-preferred";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;                // repeat on tap-into-hold
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "tap-preferred";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;
        };

        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.

        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            flavor = "tap-preferred";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;

            // for quick tapping; shift+~

            hold-trigger-on-release;
        };

        /*
         * Non-Positional Homerow Mods
         * Used for &mm_grescm_gui behavior on left hand.
         *
         * Usage: &hm LSHFT T
         * Tap: T
         * Tap-Tap-Hold: Repeat T
         * Hold: LSHIFT
         */

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "tap-preferred";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
        };

        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;

            flavor = "hold-preferred";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
&kp TAB           &kp Q          &kp W             &kp E         &kp R                &kp T                      &kp Y        &kp U                &kp I         &kp O         &kp P             &kp BSLH
&kp ESC           &hm_l LCTRL A  &hm_l LALT S      &hm_l LGUI D  &hm_shift_l LSHFT F  &kp G                      &kp H        &hm_shift_r RSHFT J  &hm_r RGUI K  &hm_r RALT L  &hm_r RCTRL SEMI  &kp SQT
&kp LSHIFT        &hm_l LGUI Z   &kp X             &kp C         &kp V                &kp B        &none  &none  &kp N        &kp M                &kp COMMA     &kp DOT       &kp UP_ARROW      &kp SLASH
&kp LEFT_CONTROL  &kp LEFT_ALT   &kp LEFT_COMMAND  &kp DEL       &kp BACKSPACE        &lt 1 SPACE                &lt 2 SPACE  &kp ENTER            &lt 3 F13     &kp LEFT      &kp DOWN_ARROW    &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        Number_layer {
            display-name = "Numbers";
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3          &kp NUMBER_4           &kp NUMBER_5                  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp N9        &kp N0     &kp BACKSPACE
&trans  &trans        &trans        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans                        &kp ASTERISK  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS   &kp EQUAL
&trans  &trans        &trans        &trans                &trans                 &trans        &trans  &trans  &kp SLASH     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS  &kp PERIOD
&trans  &trans        &trans        &trans                &trans                 &trans                        &trans        &trans        &trans        &none         &none      &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        Symbol_layer {
            display-name = "Symbols";       |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&kp GRAVE  &kp EXCL   &kp AT     &kp HASH              &kp DLLR  &kp PRCNT                         &kp CARET          &kp AMPS         &kp ASTRK              &kp LPAR       &kp RPAR        &kp PIPE
&none      &kp TILDE  &kp SLASH  &kp LEFT_PARENTHESIS  &kp LBRC  &kp LEFT_BRACKET                  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp BACKSLASH  &kp PLUS        &kp EQUAL
&none      &none      &none      &none                 &none     &none             &trans  &trans  &none              &none            &none                  &kp PIPE       &kp UNDERSCORE  &none
&none      &none      &none      &none                 &none     &none                             &none              &none            &none                  &none          &none           &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        Debug_layer {
            display-name = "Bluetooth";
            bindings = <
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none        &none  &none  &none  &none  &none
&bt BT_CLR_ALL  &none         &none         &none         &none         &none                         &none        &none  &none  &none  &none  &none
&none           &none         &none         &none         &none         &bootloader   &trans  &trans  &bootloader  &none  &none  &none  &none  &none
&none           &none         &none         &none         &none         &none                         &none        &none  &none  &none  &none  &none
            >;
        };
    };
};
